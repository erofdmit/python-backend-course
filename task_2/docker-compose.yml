x-logging: &default-logging
  driver: loki
  options:
    loki-url: 'http://localhost:3100/api/prom/push'
    loki-pipeline-stages: |
      - multiline:
          firstline: '^\d{4}-\d{2}-\d{2} \d{1,2}:\d{2}:\d{2}'
          max_wait_time: 3s
      - regex:
          expression: '^(?P<time>\d{4}-\d{2}-\d{2} \d{1,2}:\d{2}:\d{2},d{3}) (?P<message>(?s:.*))$$'

version: '3.8'

services:
  fastapi_app:
    build:
      context: ./
      dockerfile: rest_example/Dockerfile
    container_name: fastapi_app
    ports:
      - "8000:8000"
    volumes:
      - ./rest_example:/app/rest_example
    environment:
      - PROMETHEUS_MULTIPROC_DIR=/tmp
      - PYTHONPATH=/app
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://tempo:4317 
      - OTEL_SERVICE_NAME=fastapi_app  
      - APP_NAME=fastapi_app
    command: uvicorn rest_example.main:app --host 0.0.0.0 --port 8000 --reload
    depends_on:
      - prometheus
      - promtail
      - tempo
      - loki
    networks:
      - monitoring
    logging: *default-logging

  prometheus:
    image: prom/prometheus
    volumes:
      - ./prometheus/:/etc/prometheus/
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--web.console.libraries=/usr/share/prometheus/console_libraries"
      - "--web.console.templates=/usr/share/prometheus/consoles"
    ports:
      - 9090:9090
    restart: always
    depends_on:
      - loki
    logging: *default-logging
    networks:
      - monitoring

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
      - loki
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_RENDERING_SERVER_URL=http://renderer:8081/render
      - GF_RENDERING_CALLBACK_URL=http://grafana:3000/
      - GF_LOG_FILTERS=rendering:debug
      - GF_PLUGINS_ENABLE="tempo-data-source, loki-datasource"
    volumes:
      - grafana-storage:/var/lib/grafana
      - ./etc/grafana/:/etc/grafana/provisioning/datasources
      - ./etc/dashboards.yaml:/etc/grafana/provisioning/dashboards/dashboards.yaml
      - ./etc/dashboards:/etc/grafana/dashboards
    networks:
      - monitoring

  renderer:
    image: grafana/grafana-image-renderer:latest
    container_name: renderer
    ports:
      - "8081:8081"
    networks:
      - monitoring
    depends_on:
      - grafana

  tempo:
    image: grafana/tempo:2.4.1
    command: [ "--target=all", "--storage.trace.backend=local", "--storage.trace.local.path=/var/tempo", "--auth.enabled=false" ]
    ports:
      - "4317:4317"
      - "4318:4318"
    depends_on:
      - loki
    logging: *default-logging
    networks:
      - monitoring

  loki:
    image: grafana/loki:3.0.0
    command: -config.file=/etc/loki/local-config.yaml
    ports:
      - "3100:3100"
    networks:
      - monitoring

  promtail:
    image: grafana/promtail:2.9.2
    volumes:
      - /var/log:/var/log
    command: -config.file=/etc/promtail/config.yml
    networks:
      - monitoring
    logging: *default-logging

volumes:
  grafana-storage:

networks:
  monitoring:
